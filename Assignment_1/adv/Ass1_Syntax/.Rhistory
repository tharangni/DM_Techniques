#Use hour of the day to define time of day
newdata$time.of.day[newdata$hour <= 6] <- "dawn"
newdata$time.of.day[newdata$hour > 6 & newdata$hour <= 12] <- "morning"
newdata$time.of.day[newdata$hour > 12 & newdata$hour <= 18] <- "afternoon"
newdata$time.of.day[newdata$hour > 18 & newdata$hour <= 24] <- "evening"
#Add Weekday
newdata$week.day <- weekdays(newdata$date)
######################################
######################################
#Sort by id and date
newdata <- newdata[order(id, converted.time),]
######################################
#Add nth day into newdata (column)
min_day <- as.numeric(min(newdata$date))
newdata$nth_day <- as.numeric(unlist(lapply(X = as.numeric(newdata$date), FUN = function(x) x+1-min_day)))
rm(min_day)
######################################
# PREVIOUS AggregateData.R script:
#AGGREGATE DATA (DAILY LEVEL)
#make sure that newdata is loaded in environment - from ReadData.R
#This syntax:
# - creates interesting variables
# - aggregates the data
# - prepares the data for modelling
######################################
######################################
#Install packages, if not available
#install.packages("zoo")
######################################
######################################
#Load package
library(zoo)
######################################
######################################
# Create variables number of times each
# application was open throughout the day (use the sum in aggregation to get this value).
newdata$count_value.appCat.builtin <- ifelse(is.na(newdata$value.appCat.builtin) == FALSE,
newdata$count_value.appCat.builtin <- 1,
newdata$count_value.appCat.builtin <- 0)
newdata$count_value.appCat.communication <- ifelse(is.na(newdata$value.appCat.communication) == FALSE,
newdata$count_value.appCat.communication <- 1,
newdata$count_value.appCat.communication <- 0)
newdata$count_value.appCat.entertainment <- ifelse(is.na(newdata$value.appCat.entertainment) == FALSE,
newdata$count_value.appCat.entertainment <- 1,
newdata$count_value.appCat.entertainment <- 0)
newdata$count_value.appCat.finance <- ifelse(is.na(newdata$value.appCat.finance) == FALSE,
newdata$count_value.appCat.finance <- 1,
newdata$count_value.appCat.finance <- 0)
newdata$count_value.appCat.game <- ifelse(is.na(newdata$value.appCat.game) == FALSE,
newdata$count_value.appCat.game <- 1,
newdata$count_value.appCat.game <- 0)
newdata$count_value.appCat.office <- ifelse(is.na(newdata$value.appCat.office) == FALSE,
newdata$count_value.appCat.office <- 1,
newdata$count_value.appCat.office <- 0)
newdata$count_value.appCat.other <- ifelse(is.na(newdata$value.appCat.other) == FALSE,
newdata$count_value.appCat.other <- 1,
newdata$count_value.appCat.other <- 0)
newdata$count_value.appCat.social <- ifelse(is.na(newdata$value.appCat.social) == FALSE,
newdata$count_value.appCat.social <- 1,
newdata$count_value.appCat.social <- 0)
newdata$count_value.appCat.travel <- ifelse(is.na(newdata$value.appCat.travel) == FALSE,
newdata$count_value.appCat.travel <- 1,
newdata$count_value.appCat.travel <- 0)
newdata$count_value.appCat.unknown <- ifelse(is.na(newdata$value.appCat.unknown) == FALSE,
newdata$count_value.appCat.unknown <- 1,
newdata$count_value.appCat.unknown <- 0)
newdata$count_value.appCat.utilities <- ifelse(is.na(newdata$value.appCat.utilities) == FALSE,
newdata$count_value.appCat.utilities <- 1,
newdata$count_value.appCat.utilities <- 0)
newdata$count_value.appCat.weather <- ifelse(is.na(newdata$value.appCat.weather) == FALSE,
newdata$count_value.appCat.weather <- 1,
newdata$count_value.appCat.weather <- 0)
######################################
######################################
# Aggregate data on by day and id.
aggData = newdata[, .(count = .N,
agg_mood = mean(value.mood, na.rm=TRUE),
agg_arousal = mean(value.circumplex.arousal, na.rm=TRUE),
agg_valence = mean(value.circumplex.valence, na.rm=TRUE),
agg_activity = mean(value.activity, na.rm=TRUE),
agg_screen = mean(value.screen, na.rm=TRUE),
agg_call = sum(value.call, na.rm=TRUE),
agg_sms = sum(value.sms, na.rm=TRUE),
agg_builtin = mean(value.appCat.builtin, na.rm=TRUE),
agg_communication = mean(value.appCat.communication, na.rm=TRUE),
agg_entertainment = mean(value.appCat.entertainment, na.rm=TRUE),
agg_finance = mean(value.appCat.finance, na.rm=TRUE),
agg_game = mean(value.appCat.game, na.rm=TRUE),
agg_office = mean(value.appCat.office, na.rm=TRUE),
agg_other = mean(value.appCat.other, na.rm=TRUE),
agg_social = mean(value.appCat.social, na.rm=TRUE),
agg_travel = mean(value.appCat.travel, na.rm=TRUE),
agg_unknown = mean(value.appCat.unknown, na.rm=TRUE),
agg_utilities = mean(value.appCat.utilities, na.rm=TRUE),
agg_weather = mean(value.appCat.weather, na.rm=TRUE),
agg_count_builtin = sum(count_value.appCat.builtin, na.rm=TRUE),
agg_count_communication = sum(count_value.appCat.communication, na.rm=TRUE),
agg_count_entertainment = sum(count_value.appCat.entertainment, na.rm=TRUE),
agg_count_finance = sum(count_value.appCat.finance, na.rm=TRUE),
agg_count_game = sum(count_value.appCat.game, na.rm=TRUE),
agg_count_office = sum(count_value.appCat.office, na.rm=TRUE),
agg_count_other = sum(count_value.appCat.other, na.rm=TRUE),
agg_count_social = sum(count_value.appCat.social, na.rm=TRUE),
agg_count_travel = sum(count_value.appCat.travel, na.rm=TRUE),
agg_count_unknown = sum(count_value.appCat.unknown, na.rm=TRUE),
agg_count_utilities = sum(count_value.appCat.utilities, na.rm=TRUE),
agg_count_weather = sum(count_value.appCat.weather, na.rm=TRUE)),
by = .(id, date)]
######################################
# Include other more interesting variables
# Add weekday
aggData$weekday <- weekdays(aggData$date)
# Count number of different applications used per day
aggData$open_count <- aggData[,apply(X = aggData[, 11:22], MARGIN = 1, FUN = function(x) sum(!is.nan(x)))]
######################################
######################################
#Exclude data with missing Mood
PreData <- subset(aggData, (!is.nan(aggData[, aggData$agg_mood]) | !is.nan(aggData[, aggData$agg_screen]) ))
######################################
######################################
#Interpolate missing values for mood, arousal and valence
PreData$interp_mood <- na.approx(PreData$agg_mood, na.rm = FALSE)
PreData$interp_arousal <- na.approx(PreData$agg_arousal, na.rm = FALSE)
PreData$interp_valence <- na.approx(PreData$agg_valence, na.rm = FALSE)
#remove non interpolated variables
PreData$agg_mood <- NULL
PreData$agg_arousal <- NULL
PreData$agg_valence <- NULL
######################################
######################################
#Visualise correlations
ggcorr(data = PreData, label = TRUE, label_alpha = TRUE, label_size = 2.3, label_round = 2,
hjust = 0.9, size = 3)
######################################
######################################
rm(Mood, aggData, newdata)
######################################
rm(experiment)
rm(pls)
rm(PreData_df)
Temp <- PreData$interp_mood
Temp <- as.data.frame()
Temp <- data.frame()
Temp$lag1 <- PreData$interp_mood
Temp <- as.data.frame(PreData$interp_mood)
######################################
#Select only relevant variables for benchmark model
MoodBench <- PreData[, .(id, date, interp_mood)]
######################################
MoodBench$lag.mood <- MoodBench[, .(lag.mood =  shift(interp_mood)), by = id][, 2]
MoodBench <- MoodBench[, .(lag.mood =  shift(interp_mood, n = 1)),
by = id][, 2]
View(MoodBench)
MoodBench <- PreData[, .(id, date, interp_mood)]
MoodBench$lag.mood <- MoodBench[, .(lag.mood =  shift(interp_mood)), by = id][, 2]
MoodBench$lag.mood1 <- MoodBench[, .(lag.mood =  shift(interp_mood, n = 1)),
by = id][, 2]
View(MoodBench)
View(Temp)
createMAVariable <- function (dataset, variableName, dfDollarName) {
#initialise a temporary dataset
Temp <- as.data.frame(dfDollarName)
Temp$lag.1 <- dataset[, .(dfDollarName =  shift(variableName, n = 1)),
by = id][, 2]
Temp$lag.2 <- dataset[, .(dfDollarName =  shift(variableName, n = 2)),
by = id][, 2]
Temp$lag.3 <- dataset[, .(dfDollarName =  shift(variableName, n = 3)),
by = id][, 2]
Temp$lag.4 <- dataset[, .(dfDollarName =  shift(variableName, n = 4)),
by = id][, 2]
Temp$lag.5 <- dataset[, .(dfDollarName =  shift(variableName, n = 5)),
by = id][, 2]
Temp$lag.6 <- dataset[, .(dfDollarName =  shift(variableName, n = 6)),
by = id][, 2]
Temp$lag.7 <- dataset[, .(dfDollarName =  shift(variableName, n = 7)),
by = id][, 2]
#Create benchmark variables
dataset[paste("MA2_", variableNamel, sep = "")] <-  Temp[, .(mean.2.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2")]
dataset[paste("MA5_", variableNamel, sep = "")] <- Temp[, .(mean.5.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.m5")]
dataset[paste("MA7_", variableNamel, sep = "")] <- Temp[, .(mean.7.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.5", "lag.6", "lag.7")]
}
View(Temp)
View(PreData)
createMAVariable <- function (dataset, variableName, dfDollarName) {
#initialise a temporary dataset
Temp <- as.data.frame(dfDollarName)
Temp$lag.1 <- dataset[, .(dfDollarName =  shift(variableName, n = 1)),
by = id][, 2]
Temp$lag.2 <- dataset[, .(dfDollarName =  shift(variableName, n = 2)),
by = id][, 2]
Temp$lag.3 <- dataset[, .(dfDollarName =  shift(variableName, n = 3)),
by = id][, 2]
Temp$lag.4 <- dataset[, .(dfDollarName =  shift(variableName, n = 4)),
by = id][, 2]
Temp$lag.5 <- dataset[, .(dfDollarName =  shift(variableName, n = 5)),
by = id][, 2]
Temp$lag.6 <- dataset[, .(dfDollarName =  shift(variableName, n = 6)),
by = id][, 2]
Temp$lag.7 <- dataset[, .(dfDollarName =  shift(variableName, n = 7)),
by = id][, 2]
#Create benchmark variables
dataset[paste("MA2_", variableNamel, sep = "")] <-  Temp[, .(mean.2.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2")]
dataset[paste("MA5_", variableNamel, sep = "")] <- Temp[, .(mean.5.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.m5")]
dataset[paste("MA7_", variableNamel, sep = "")] <- Temp[, .(mean.7.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.5", "lag.6", "lag.7")]
return(dataset)
}
Temp <- createMAVariable(PreData, interp_mood,  PreData$interp_mood)
createMAVariable <- function (dataset, variableName, dfDollarName) {
#initialise a temporary dataset
Temp <- as.data.frame(dfDollarName)
Temp$lag.1 <- dataset[, .(variableName =  shift(variableName, n = 1)),
by = id][, 2]
Temp$lag.2 <- dataset[, .(variableName =  shift(variableName, n = 2)),
by = id][, 2]
Temp$lag.3 <- dataset[, .(variableName =  shift(variableName, n = 3)),
by = id][, 2]
Temp$lag.4 <- dataset[, .(variableName =  shift(variableName, n = 4)),
by = id][, 2]
Temp$lag.5 <- dataset[, .(variableName =  shift(variableName, n = 5)),
by = id][, 2]
Temp$lag.6 <- dataset[, .(variableName =  shift(variableName, n = 6)),
by = id][, 2]
Temp$lag.7 <- dataset[, .(variableName =  shift(variableName, n = 7)),
by = id][, 2]
#Create benchmark variables
dataset[paste("MA2_", variableNamel, sep = "")] <-  Temp[, .(mean.2.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2")]
dataset[paste("MA5_", variableNamel, sep = "")] <- Temp[, .(mean.5.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.m5")]
dataset[paste("MA7_", variableNamel, sep = "")] <- Temp[, .(mean.7.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.5", "lag.6", "lag.7")]
return(dataset)
}
Temp <- createMAVariable(PreData, interp_mood,  PreData$interp_mood)
createMAVariable <- function (dataset, variableName, dfDollarName) {
#initialise a temporary dataset
Temp <- as.data.frame(dfDollarName)
Temp$lag.1 <- dataset[, .(variableName =  shift(as.name(variableName), n = 1)),
by = id][, 2]
Temp$lag.2 <- dataset[, .(variableName =  shift(variableName, n = 2)),
by = id][, 2]
Temp$lag.3 <- dataset[, .(variableName =  shift(variableName, n = 3)),
by = id][, 2]
Temp$lag.4 <- dataset[, .(variableName =  shift(variableName, n = 4)),
by = id][, 2]
Temp$lag.5 <- dataset[, .(variableName =  shift(variableName, n = 5)),
by = id][, 2]
Temp$lag.6 <- dataset[, .(variableName =  shift(variableName, n = 6)),
by = id][, 2]
Temp$lag.7 <- dataset[, .(variableName =  shift(variableName, n = 7)),
by = id][, 2]
#Create benchmark variables
dataset[paste("MA2_", variableNamel, sep = "")] <-  Temp[, .(mean.2.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2")]
dataset[paste("MA5_", variableNamel, sep = "")] <- Temp[, .(mean.5.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.m5")]
dataset[paste("MA7_", variableNamel, sep = "")] <- Temp[, .(mean.7.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.5", "lag.6", "lag.7")]
return(dataset)
}
Temp <- createMAVariable(PreData, interp_mood,  PreData$interp_mood)
Temp <- createMAVariable(PreData, "interp_mood",  PreData$interp_mood)
createMAVariable <- function (dataset, variableName, dfDollarName) {
#initialise a temporary dataset
Temp <- as.data.frame(dfDollarName)
print(Temp)
Temp$lag.1 <- dataset[, .(variableName =  shift(as.name(variableName), n = 1)),
by = id][, 2]
Temp$lag.2 <- dataset[, .(variableName =  shift(variableName, n = 2)),
by = id][, 2]
Temp$lag.3 <- dataset[, .(variableName =  shift(variableName, n = 3)),
by = id][, 2]
Temp$lag.4 <- dataset[, .(variableName =  shift(variableName, n = 4)),
by = id][, 2]
Temp$lag.5 <- dataset[, .(variableName =  shift(variableName, n = 5)),
by = id][, 2]
Temp$lag.6 <- dataset[, .(variableName =  shift(variableName, n = 6)),
by = id][, 2]
Temp$lag.7 <- dataset[, .(variableName =  shift(variableName, n = 7)),
by = id][, 2]
#Create benchmark variables
dataset[paste("MA2_", variableNamel, sep = "")] <-  Temp[, .(mean.2.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2")]
dataset[paste("MA5_", variableNamel, sep = "")] <- Temp[, .(mean.5.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.m5")]
dataset[paste("MA7_", variableNamel, sep = "")] <- Temp[, .(mean.7.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.5", "lag.6", "lag.7")]
return(dataset)
}
Temp <- createMAVariable(PreData, "interp_mood",  PreData$interp_mood)
createMAVariable <- function (dataset, variableName, dfDollarName) {
#initialise a temporary dataset
Temp <- as.data.frame(dfDollarName)
print(names(Temp))
Temp$lag.1 <- dataset[, .(variableName =  shift(as.name(variableName), n = 1)),
by = id][, 2]
Temp$lag.2 <- dataset[, .(variableName =  shift(variableName, n = 2)),
by = id][, 2]
Temp$lag.3 <- dataset[, .(variableName =  shift(variableName, n = 3)),
by = id][, 2]
Temp$lag.4 <- dataset[, .(variableName =  shift(variableName, n = 4)),
by = id][, 2]
Temp$lag.5 <- dataset[, .(variableName =  shift(variableName, n = 5)),
by = id][, 2]
Temp$lag.6 <- dataset[, .(variableName =  shift(variableName, n = 6)),
by = id][, 2]
Temp$lag.7 <- dataset[, .(variableName =  shift(variableName, n = 7)),
by = id][, 2]
#Create benchmark variables
dataset[paste("MA2_", variableNamel, sep = "")] <-  Temp[, .(mean.2.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2")]
dataset[paste("MA5_", variableNamel, sep = "")] <- Temp[, .(mean.5.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.m5")]
dataset[paste("MA7_", variableNamel, sep = "")] <- Temp[, .(mean.7.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.5", "lag.6", "lag.7")]
return(dataset)
}
Temp <- createMAVariable(PreData, "interp_mood",  PreData$interp_mood)
createMAVariable <- function (dataset, variableName, dfDollarName) {
#initialise a temporary dataset
Temp <- as.data.frame(dfDollarName)
print(names(Temp))
print(variableName)
Temp$lag.1 <- dataset[, .(variableName =  shift(as.name(variableName), n = 1)),
by = id][, 2]
Temp$lag.2 <- dataset[, .(variableName =  shift(variableName, n = 2)),
by = id][, 2]
Temp$lag.3 <- dataset[, .(variableName =  shift(variableName, n = 3)),
by = id][, 2]
Temp$lag.4 <- dataset[, .(variableName =  shift(variableName, n = 4)),
by = id][, 2]
Temp$lag.5 <- dataset[, .(variableName =  shift(variableName, n = 5)),
by = id][, 2]
Temp$lag.6 <- dataset[, .(variableName =  shift(variableName, n = 6)),
by = id][, 2]
Temp$lag.7 <- dataset[, .(variableName =  shift(variableName, n = 7)),
by = id][, 2]
#Create benchmark variables
dataset[paste("MA2_", variableNamel, sep = "")] <-  Temp[, .(mean.2.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2")]
dataset[paste("MA5_", variableNamel, sep = "")] <- Temp[, .(mean.5.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.m5")]
dataset[paste("MA7_", variableNamel, sep = "")] <- Temp[, .(mean.7.previousdays = apply(.SD, 1, mean)),
by = id,
.SDcols = c("lag.1", "lag.2", "lag.3", "lag.4", "lag.5", "lag.6", "lag.7")]
return(dataset)
}
Temp <- createMAVariable(PreData, "interp_mood",  PreData$interp_mood)
View(Temp)
View(PreData)
Temp <- createMAVariable(PreData, interp_mood,  PreData$interp_mood)
Temp <- createMAVariable(PreData, as.name(interp_mood),  PreData$interp_mood)
library("forecast", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
get.mav <- function(bp,n=2){
require(zoo)
if(is.na(bp[1])) bp[1] <- mean(bp,na.rm=TRUE)
bp <- na.locf(bp,na.rm=FALSE)
if(length(bp)<n) return(bp)
c(bp[1:(n-1)],rollapply(bp,width=n,mean,align="right"))
}
PreData$ma.mood1 <- PreData[, .(lag.mood =  get.mav(interp_mood, n = 1)),
by = id][, 2]
Temp <- PreData[, .(lag.mood =  get.mav(interp_mood, n = 1)),
by = id][, 2]
Temp <- PreData[, .(lag.mood =  as.numeric(get.mav(interp_mood, n = 1))),
by = id][, 2]
View(Temp)
View(PreData)
Temp <- PreData[, .(lag.mood =  as.numeric(get.mav(interp_mood, n = 7))),
by = id][, 2]
View(Temp)
View(PreData)
Temp <- PreData[, .(lag.mood7 =  as.numeric(get.mav(interp_mood, n = 7))),
by = id][, 2]
Temp <- PreData[, .(lag.mood7 =  as.numeric(get.mav(interp_mood, n = 7))),
by = id][, 2]
Temp <- PreData[, .(lag.mood7 =  as.numeric(get.mav(interp_mood, n = 3))),
by = id][, 2]
Temp <- PreData[, .(lag.mood7 =  as.numeric(get.mav(interp_mood, n = 7))),
by = id][, 2]
Temp <- PreData[, .(lag.mood3 =  as.numeric(get.mav(interp_mood, n = 3))),
by = id][, 2]
View(PreData)
PreData$lag.mood7 <- PreData[, .(lag.mood7 =  as.numeric(get.mav(interp_mood, n = 7))),
by = id][, 2]
PreData$lag.mood3 <- PreData[, .(lag.mood3 =  as.numeric(get.mav(interp_mood, n = 3))),
by = id][, 2]
View(PreData)
PreData$ma.mood1 <- NULL
PreData$lag.mood7 <- NULL
PreData$lag.mood3 <- NULL
PreData$ma.mood2 <- PreData[, .(ma2 =  as.numeric(get.mav(interp_mood, n = 2))),
by = id][, 2]
View(PreData)
names(PreData)
PreData$ma2_agg_sms<- PreData[,.(ma2 = as.numeric(get.mav(agg_sms, n = 5))), by = id] [, 2]
PreData$ma2_agg_entertainment<- PreData[,.(ma2 = as.numeric(get.mav(agg_entertainment, n = 5))), by = id] [, 2]
PreData$ma2_agg_office<- PreData[,.(ma2 = as.numeric(get.mav(agg_office, n = 5))), by = id] [, 2]
PreData$ma2_agg_travel<- PreData[,.(ma2 = as.numeric(get.mav(agg_travel, n = 5))), by = id] [, 2]
PreData$ma2_agg_weather<- PreData[,.(ma2 = as.numeric(get.mav(agg_weather, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_entertainment<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_entertainment, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_office<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_office, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_travel<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_travel, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_weather<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_weather, n = 5))), by = id] [, 2]
PreData$ma2_interp_mood<- PreData[,.(ma2 = as.numeric(get.mav(interp_mood, n = 5))), by = id] [, 2]
PreData$ma2_agg_screen<- PreData[,.(ma2 = as.numeric(get.mav(agg_screen, n = 5))), by = id] [, 2]
PreData$ma2_agg_builtin<- PreData[,.(ma2 = as.numeric(get.mav(agg_builtin, n = 5))), by = id] [, 2]
PreData$ma2_agg_finance<- PreData[,.(ma2 = as.numeric(get.mav(agg_finance, n = 5))), by = id] [, 2]
PreData$ma2_agg_other<- PreData[,.(ma2 = as.numeric(get.mav(agg_other, n = 5))), by = id] [, 2]
PreData$ma2_agg_unknown<- PreData[,.(ma2 = as.numeric(get.mav(agg_unknown, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_builtin<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_builtin, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_finance<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_finance, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_other<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_other, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_unknown<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_unknown, n = 5))), by = id] [, 2]
PreData$ma2_interp_arousal<- PreData[,.(ma2 = as.numeric(get.mav(interp_arousal, n = 5))), by = id] [, 2]
PreData$ma2_agg_call<- PreData[,.(ma2 = as.numeric(get.mav(agg_call, n = 5))), by = id] [, 2]
PreData$ma2_agg_communication<- PreData[,.(ma2 = as.numeric(get.mav(agg_communication, n = 5))), by = id] [, 2]
PreData$ma2_agg_game<- PreData[,.(ma2 = as.numeric(get.mav(agg_game, n = 5))), by = id] [, 2]
PreData$ma2_agg_social<- PreData[,.(ma2 = as.numeric(get.mav(agg_social, n = 5))), by = id] [, 2]
PreData$ma2_agg_utilities<- PreData[,.(ma2 = as.numeric(get.mav(agg_utilities, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_communication<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_communication, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_game<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_game, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_social<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_social, n = 5))), by = id] [, 2]
PreData$ma2_agg_count_utilities<- PreData[,.(ma2 = as.numeric(get.mav(agg_count_utilities, n = 5))), by = id] [, 2]
PreData$ma2_interp_valence<- PreData[,.(ma2 = as.numeric(get.mav(interp_valence, n = 5))), by = id] [, 2]
PreData$ma5_agg_sms<- PreData[,.(ma5 = as.numeric(get.mav(agg_sms, n = 5))), by = id] [, 2]
PreData$ma5_agg_entertainment<- PreData[,.(ma5 = as.numeric(get.mav(agg_entertainment, n = 5))), by = id] [, 2]
PreData$ma5_agg_office<- PreData[,.(ma5 = as.numeric(get.mav(agg_office, n = 5))), by = id] [, 2]
PreData$ma5_agg_travel<- PreData[,.(ma5 = as.numeric(get.mav(agg_travel, n = 5))), by = id] [, 2]
PreData$ma5_agg_weather<- PreData[,.(ma5 = as.numeric(get.mav(agg_weather, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_entertainment<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_entertainment, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_office<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_office, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_travel<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_travel, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_weather<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_weather, n = 5))), by = id] [, 2]
PreData$ma5_interp_mood<- PreData[,.(ma5 = as.numeric(get.mav(interp_mood, n = 5))), by = id] [, 2]
PreData$ma5_agg_screen<- PreData[,.(ma5 = as.numeric(get.mav(agg_screen, n = 5))), by = id] [, 2]
PreData$ma5_agg_builtin<- PreData[,.(ma5 = as.numeric(get.mav(agg_builtin, n = 5))), by = id] [, 2]
PreData$ma5_agg_finance<- PreData[,.(ma5 = as.numeric(get.mav(agg_finance, n = 5))), by = id] [, 2]
PreData$ma5_agg_other<- PreData[,.(ma5 = as.numeric(get.mav(agg_other, n = 5))), by = id] [, 2]
PreData$ma5_agg_unknown<- PreData[,.(ma5 = as.numeric(get.mav(agg_unknown, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_builtin<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_builtin, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_finance<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_finance, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_other<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_other, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_unknown<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_unknown, n = 5))), by = id] [, 2]
PreData$ma5_interp_arousal<- PreData[,.(ma5 = as.numeric(get.mav(interp_arousal, n = 5))), by = id] [, 2]
PreData$ma5_agg_call<- PreData[,.(ma5 = as.numeric(get.mav(agg_call, n = 5))), by = id] [, 2]
PreData$ma5_agg_communication<- PreData[,.(ma5 = as.numeric(get.mav(agg_communication, n = 5))), by = id] [, 2]
PreData$ma5_agg_game<- PreData[,.(ma5 = as.numeric(get.mav(agg_game, n = 5))), by = id] [, 2]
PreData$ma5_agg_social<- PreData[,.(ma5 = as.numeric(get.mav(agg_social, n = 5))), by = id] [, 2]
PreData$ma5_agg_utilities<- PreData[,.(ma5 = as.numeric(get.mav(agg_utilities, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_communication<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_communication, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_game<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_game, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_social<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_social, n = 5))), by = id] [, 2]
PreData$ma5_agg_count_utilities<- PreData[,.(ma5 = as.numeric(get.mav(agg_count_utilities, n = 5))), by = id] [, 2]
PreData$ma5_interp_valence<- PreData[,.(ma5 = as.numeric(get.mav(interp_valence, n = 5))), by = id] [, 2]
PreData$ma7_agg_sms<- PreData[,.(ma7 = as.numeric(get.mav(agg_sms, n = 7))), by = id] [, 2]
PreData$ma7_agg_entertainment<- PreData[,.(ma7 = as.numeric(get.mav(agg_entertainment, n = 7))), by = id] [, 2]
PreData$ma7_agg_office<- PreData[,.(ma7 = as.numeric(get.mav(agg_office, n = 7))), by = id] [, 2]
PreData$ma7_agg_travel<- PreData[,.(ma7 = as.numeric(get.mav(agg_travel, n = 7))), by = id] [, 2]
PreData$ma7_agg_weather<- PreData[,.(ma7 = as.numeric(get.mav(agg_weather, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_entertainment<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_entertainment, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_office<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_office, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_travel<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_travel, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_weather<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_weather, n = 7))), by = id] [, 2]
PreData$ma7_interp_mood<- PreData[,.(ma7 = as.numeric(get.mav(agg_builtin, n = 7))), by = id] [, 2]
PreData$ma7_agg_screen<- PreData[,.(ma7 = as.numeric(get.mav(agg_screen, n = 7))), by = id] [, 2]
PreData$ma7_agg_builtin<- PreData[,.(ma7 = as.numeric(get.mav(agg_builtin, n = 7))), by = id] [, 2]
PreData$ma7_agg_finance<- PreData[,.(ma7 = as.numeric(get.mav(agg_finance, n = 7))), by = id] [, 2]
PreData$ma7_agg_other<- PreData[,.(ma7 = as.numeric(get.mav(agg_other, n = 7))), by = id] [, 2]
PreData$ma7_agg_unknown<- PreData[,.(ma7 = as.numeric(get.mav(agg_unknown, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_builtin<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_builtin, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_finance<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_finance, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_other<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_other, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_unknown<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_unknown, n = 7))), by = id] [, 2]
PreData$ma7_interp_arousal<- PreData[,.(ma7 = as.numeric(get.mav(agg_communication, n = 7))), by = id] [, 2]
PreData$ma7_agg_call<- PreData[,.(ma7 = as.numeric(get.mav(agg_call, n = 7))), by = id] [, 2]
PreData$ma7_agg_communication<- PreData[,.(ma7 = as.numeric(get.mav(agg_communication, n = 7))), by = id] [, 2]
PreData$ma7_agg_game<- PreData[,.(ma7 = as.numeric(get.mav(agg_game, n = 7))), by = id] [, 2]
PreData$ma7_agg_social<- PreData[,.(ma7 = as.numeric(get.mav(agg_social, n = 7))), by = id] [, 2]
PreData$ma7_agg_utilities<- PreData[,.(ma7 = as.numeric(get.mav(agg_utilities, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_communication<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_communication, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_game<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_game, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_social<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_social, n = 7))), by = id] [, 2]
PreData$ma7_agg_count_utilities<- PreData[,.(ma7 = as.numeric(get.mav(agg_count_utilities, n = 7))), by = id] [, 2]
PreData$ma7_interp_valence<- PreData[,.(ma7 = as.numeric(get.mav(interp_valence, n = 7))), by = id] [, 2]
View(PreData)
